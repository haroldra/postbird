{
  "name": "redscript",
  "description": "RedScript, a Ruby Flavored Superset Language",
  "version": "0.1.0",
  "author": {
    "name": "Adam Brodzinski",
    "email": "adambrodzinski@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/AdamBrodzinski/RedScript"
  },
  "keywords": [
    "redscript",
    "compiler"
  ],
  "bin": {
    "redscript": "./bin/redscript"
  },
  "directories.lib": "./lib",
  "dependencies": {
    "colors": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "scripts": {
    "test": "mocha -R spec",
    "prepublish": "npm prune"
  },
  "preferGlobal": "true",
  "readme": "# RedScript  \n### A Ruby Flavored JavaScript Experiment\n\n* Paste (almost) any JS into a RedScript file\n* Cleaner syntax for modules (AMD and CommonJS)\n* Easier class like inheritance & self based prototypal inheritance syntax\n\nRedScript was created to provide a more native experience for modules (AMD & CommonJS), easier inheritence, \nand a Ruby style syntax that still behaves like JavaScript.  \n\nIt was also created as a side project to learn more about Node, NPM Modules and Regular Expressions. In the future \nI would also like to add a proper lexer/parser to implement more advanced features like optional parens \nand ES5 attr_accessor like properties. *Pull requests welcome ;-)*\n\nMore syntax examples at [redscript.org](http://redscript.org)\n\n\n#### To Install Globally and Run\n\n```\nsudo npm install -g redscript\nredscript watch [fileName fileName2]\n```\n\n#### A little RedScript...\n\n```ruby\n# RequireJS AMD Modules...\n#\ndefine module\nrequire 'backbone' as Backbone                                       * see spec.md for full translation\nrequire './views/widget' as WidgetView\n\n\n# Block-like anonymous functions\n# Note, parens are currently req. around get/end, see spec.md\n#\napp.get '/users/:name', do |res, req|                                 app.get('/users/:name', function(res,req) {\n  puts req.params.name                                                  console.log(req.params.name);\nend                                                                   });\n\n\n# Paren-free constructs\n#\nif foo == 2                                                           if (foo === 2) {\n  puts \"It's #{foo}\"                                                    console.log(\"It's \" + foo);\nelse                                                                  } else {\n  alert \"Rut Roh\"                                                       alert(\"Rut Roh\");\nend                                                                   }\n\n\n# Make constructors quack like a duck\n#                                                                     # note, inheritance methods are opt. inserted\nclass Duck < Animal                                                   var Duck = Animal.extend({\n  def init(name)                                                        init: function(name) {\n    super foo, bar                                                        this._super(foo, bar);\n    @name = name                                                          this.name = name;\n  end,                                                                  },\n\n  def sayHi                                                             sayHi: function() {\n    puts 'Hello!'                                                         console.log('Hello!');\n  end                                                                   }\nend                                                                   });\n```\n### See [redscript.org](http://redscript.org) for full syntax!\n\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/AdamBrodzinski/RedScript/issues"
  },
  "homepage": "https://github.com/AdamBrodzinski/RedScript",
  "_id": "redscript@0.1.0",
  "_from": "redscript@"
}
